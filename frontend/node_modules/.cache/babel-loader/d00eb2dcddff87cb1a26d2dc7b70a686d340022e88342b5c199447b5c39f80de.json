{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Escritorio/pti/frontend/src/components/Auth/Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n//import {useNavigate} from 'react-router-dom';\nimport { register } from '../../services/Auth';\nimport '../Styles/Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  //const navigate = useNavigate(); ELIMINAR\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== passwordConfirmation) {\n      setErrorMessage('Los dos passwords son diferentes');\n      setSuccessMessage('');\n      return;\n    }\n    try {\n      //await register(userName, password);\n\n      setSuccessMessage('Registro realizado correctamente');\n      setErrorMessage('');\n\n      //navigate('/dashboard'); ELIMINAR\n    } catch (error) {\n      if (error.response) {\n        setErrorMessage('Error al iniciar sesión');\n      } else {\n        setErrorMessage('No se ha podido conectar con el backend');\n      }\n      setSuccessMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"userName\",\n            children: \"Usuario:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userName,\n            onChange: e => setUserName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"passwordConfirmation\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: passwordConfirmation,\n            onChange: e => setPasswordConfirmation(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 38\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green'\n          },\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Iniciar Sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"JXET5gxZ9K+CtT/Uk4rNFQ8vz4s=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","register","jsxDEV","_jsxDEV","Register","_s","userName","setUserName","password","setPassword","passwordConfirmation","setPasswordConfirmation","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleSubmit","e","preventDefault","error","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","style","color","_c","$RefreshReg$"],"sources":["/home/usuario/Escritorio/pti/frontend/src/components/Auth/Register.jsx"],"sourcesContent":["import React, {useState} from 'react';\n//import {useNavigate} from 'react-router-dom';\nimport {register} from '../../services/Auth';\nimport '../Styles/Register.css';\n\nconst Register = () => {\n    const [userName, setUserName] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordConfirmation, setPasswordConfirmation] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    //const navigate = useNavigate(); ELIMINAR\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (password !== passwordConfirmation) {\n            setErrorMessage('Los dos passwords son diferentes');\n            setSuccessMessage('');\n            return;\n        }\n\n        try {\n\n            //await register(userName, password);\n\n            setSuccessMessage('Registro realizado correctamente');\n            setErrorMessage('');\n\n            //navigate('/dashboard'); ELIMINAR\n        } catch (error) {\n            if (error.response) {\n                setErrorMessage('Error al iniciar sesión');\n            } else {\n                setErrorMessage('No se ha podido conectar con el backend');\n            }\n            setSuccessMessage('');\n        }\n    };\n\n    return (\n        <div className='register-container'>\n            <div className='register-form'>\n                <h2>Registrarse</h2>\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor='userName'>Usuario:</label>\n                        <input type=\"text\" value={userName} onChange={(e) => setUserName(e.target.value)} required/>\n                    </div>\n                    <div>\n                        <label htmlFor='password'>Password:</label>\n                        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required/>\n                    </div>\n                    <div>\n                        <label htmlFor='passwordConfirmation'>Password:</label>\n                        <input type=\"password\" value={passwordConfirmation} onChange={(e) => setPasswordConfirmation(e.target.value)} required/>\n                    </div>\n                    {errorMessage && <p style={{color: 'red'}}>{errorMessage}</p>}\n                    {successMessage && <p style={{color: 'green'}}>{successMessage}</p>}\n                    <button type=\"submit\">Iniciar Sesión</button>\n                </form>\n            </div>\n        </div>\n        );\n};\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}