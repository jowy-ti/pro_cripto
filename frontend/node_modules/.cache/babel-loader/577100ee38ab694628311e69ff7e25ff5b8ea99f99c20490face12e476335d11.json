{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Escritorio/pti/frontend/src/components/Payments/BlockchainPayment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { sendPayment } from '../../services/Payment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DESTINATARIO_PAGO = 0x1234; //CAMBIAR!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nconst BlockchainPayment = ({\n  costeTotal,\n  onClose\n}) => {\n  _s();\n  const [account, setAccount] = useState('');\n  //const [amount, setAmount] = useState('');\n  //const [recipient , setRecipient] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const amount = costeTotal;\n  const recipient = `${DESTINATARIO_PAGO}`;\n  useEffect(() => {\n    const checkMetaMaskConnection = async () => {\n      if (typeof window.ethereum != 'undefined') {\n        try {\n          const accounts = await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          setAccount(accounts[0]);\n        } catch (error) {\n          console.error(\"Error al conectarse a MetaMask\", error);\n          setErrorMessage(\"Fallo al conectarse a MetaMask. Comprueba si esta instalado y desbloqueado\");\n        }\n      } else {\n        setErrorMessage(\"MetaMask no esta instalado. Intalalo para poder pagar.\");\n      }\n    };\n    checkMetaMaskConnection();\n  }, []);\n  const handlePayment = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setErrorMessage('');\n    setSuccessMessage('');\n    try {\n      if (!window.ethereum) throw new Error(\"MetaMask no esta instalado\");\n      const message = `Pay ${amount} UPCoin to ${recipient}`;\n      const signature = await window.ethereum.request({\n        method: 'personal_sign',\n        params: [message, account]\n      });\n      const paymentData = {\n        signature,\n        message,\n        account,\n        recipient,\n        sender: account\n      };\n      const response = await sendPayment(paymentData);\n      setSuccessMessage(response.message);\n      //setAmount('');\n      //setRecipient('');\n    } catch (error) {\n      console.error(error);\n      setErrorMessage(error || 'Ha ocurrido un error durante el pago');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blockchain-payment\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blockchain Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), account ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cuenta conectada: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Porfavor conecta tu cuenta de MetaMask wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 64\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePayment,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total a pagar: \", amount, \" UPCoin\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Destinatario del pago: \", recipient]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !account || loading,\n        children: loading ? 'Procesando...' : 'Firma el Pago'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onClose,\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errorMessage\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 30\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"successMessage\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(BlockchainPayment, \"MYtvdJhl53b2UKgwUWB4HrDmRjw=\");\n_c = BlockchainPayment;\nexport default BlockchainPayment;\nvar _c;\n$RefreshReg$(_c, \"BlockchainPayment\");","map":{"version":3,"names":["React","useState","useEffect","sendPayment","jsxDEV","_jsxDEV","DESTINATARIO_PAGO","BlockchainPayment","costeTotal","onClose","_s","account","setAccount","loading","setLoading","errorMessage","setErrorMessage","successMessage","setSuccessMessage","amount","recipient","checkMetaMaskConnection","window","ethereum","accounts","request","method","error","console","handlePayment","e","preventDefault","Error","message","signature","params","paymentData","sender","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/usuario/Escritorio/pti/frontend/src/components/Payments/BlockchainPayment.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { sendPayment } from '../../services/Payment';\n\nconst DESTINATARIO_PAGO = 0x1234;//CAMBIAR!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nconst BlockchainPayment = ({costeTotal, onClose}) => {\n    const [account, setAccount] = useState('');\n    //const [amount, setAmount] = useState('');\n    //const [recipient , setRecipient] = useState('');\n    const [loading , setLoading] = useState(false);\n    const [errorMessage , setErrorMessage] = useState('');\n    const [successMessage , setSuccessMessage] = useState('');\n\n    const amount = costeTotal;\n    const recipient = `${DESTINATARIO_PAGO}`;\n\n    useEffect(() => {\n        const checkMetaMaskConnection = async () => {\n            if (typeof window.ethereum != 'undefined') {\n                try {\n                    const accounts = await window.ethereum.request({method:'eth_requestAccounts'});\n                    setAccount(accounts[0]);\n                } catch (error) {\n                    console.error(\"Error al conectarse a MetaMask\", error);\n                    setErrorMessage(\"Fallo al conectarse a MetaMask. Comprueba si esta instalado y desbloqueado\");\n                }\n            } else {\n                setErrorMessage(\"MetaMask no esta instalado. Intalalo para poder pagar.\");\n            }\n        };\n\n        checkMetaMaskConnection();\n    }, []);\n\n    const handlePayment = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setErrorMessage('');\n        setSuccessMessage('');\n    \n\n        try {\n            if (!window.ethereum) throw new Error (\"MetaMask no esta instalado\");\n\n            const message = `Pay ${amount} UPCoin to ${recipient}`;\n\n            const signature = await window.ethereum.request({method: 'personal_sign', params: [message, account]});\n\n            const paymentData = {\n                signature,\n                message,\n                account,\n                recipient,\n                sender: account\n            };\n\n            const response = await sendPayment(paymentData);\n\n            setSuccessMessage(response.message);\n            //setAmount('');\n            //setRecipient('');\n        } catch (error) {\n            console.error(error);\n            setErrorMessage(error || 'Ha ocurrido un error durante el pago')\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className='blockchain-payment'>\n            <h2>Blockchain Payment</h2>\n            {account ? (<p>Cuenta conectada: {account}</p>) : (<p>Porfavor conecta tu cuenta de MetaMask wallet</p>)}\n            <form onSubmit={handlePayment}>\n                <div>\n                    {/*label htmlFor='amount'> Cantidad (UPCoin):</label>\n                    <input type=\"number\" id=\"amount\" value={amount} onChange={(e) => setAmount(e.target.value)} required />*/}\n                    <p>Total a pagar: {amount} UPCoin</p>\n                    <p>Destinatario del pago: {recipient}</p>\n                </div>\n                <button type='submit' disabled={!account || loading}>\n                    {loading ? 'Procesando...' : 'Firma el Pago'}\n                </button>\n                <button type=\"button\" onClick={onClose}>Cancelar</button>\n            </form>\n            {errorMessage && <p className='errorMessage'>{errorMessage}</p>}\n            {successMessage && <p className='successMessage'>{successMessage}</p>}\n        </div>\n    );\n};\n\nexport default BlockchainPayment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}